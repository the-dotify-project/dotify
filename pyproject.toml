[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "dotify"
version = "2.0.6"
description = "üêçüé∂ Yet another Spotify Web API Python library"
readme = "README.md"
authors = ["billsioros <billsioros97@gmail.com>"]
license = "MIT"
homepage = "https://the-dotify-project.github.io/dotify"
repository = "https://github.com/the-dotify-project/dotify"
keywords = ["spotify", "download", "downloader", "youtube", "mp3"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Multimedia :: Sound/Audio",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/the-dotify-project/dotify/issues"
"Changelog" = "https://github.com/the-dotify-project/dotify/releases"

[tool.poetry.dependencies]
python = "^3.7"
python-jsonschema-objects = "*"
youtube-search-python = "*"
requests = "*"
moviepy = "*"
spotipy = "*"
mutagen = "*"
pytube = "*"
cached-property = "^1.5.2"

[tool.poetry.dev-dependencies]
flake8 = "*"
isort = "*"
pytest = "*"
pytest-cov = "*"
tox = "^3.23.0"
tox-poetry-installer = { extras = ["poetry"], version = "^0.8.0" }
black = "^20.8b1"
wemake-python-styleguide = "^0.15.2"
tox-gh-actions = "^2.5.0"
pre-commit = "^4.0.0"
mkdocs = "^1.1.2"
python-semantic-release = "^7.15.3"
mkdocs-material = "^7.1.3"
mkdocstrings = "^0.15.0"
mkdocs-minify-plugin = "^0.4.0"
tox-pyenv = "^1.1.0"
mkdocs-redirects = "^1.0.3"
pytest-sugar = "^0.9.4"
mdx-truly-sane-lists = "^1.2"
mike = "^1.0.1"
poethepoet = "^0.10.0"
pytest-rerunfailures = "^10.1"
mypy = "^0.910"
types-requests = "^2.25.0"
pytest-clarity = "^1.0.1"
flakehell = "^0.9.0"
coverage = {extras = ["toml"], version = "^5.5"}

[tool.semantic_release]
version_toml = "pyproject.toml:tool.poetry.version"
changelog_components = "semantic_release.changelog.changelog_headers,semantic_release.changelog.compare_url"
build_command = "python -m pip install poetry && poetry build"

[tool.vulture]
min_confidence = 95
paths = ["dotify", "tests", "examples"]

[tool.poe.tasks]
clean = { cmd = "rm -rf ./**/__pycache__ dist site .pytest_cache .mypy_cache .coverage", help = "Clean up any auxiliary files" }
format = { shell = "poetry run isort .; poetry run black .", help = "Format your codebase" }
hooks = { cmd = "poetry run pre-commit run --all-files", help = "Run all pre-commit hooks" }
test = { cmd = "poetry run pytest --cov=dotify", help = "Run the test suite and produce a coverage report" }
type-check = { cmd = "poetry run mypy", help = "Run static type checking on your codebase" }
lint = { cmd = "poetry run flakehell lint", help = "Lint your code for errors" }
docs = { shell = "python -c 'import webbrowser; webbrowser.open(\"http://127.0.0.1:8000\")'; poetry run mkdocs serve", help = "Build and serve the documentation" }

[tool.pytest.ini_options]
addopts = "-vv --reruns 3 --color=yes"# --doctest-modules"
log_cli = false
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
log_cli_format = "%(asctime)s %(levelname)s %(message)s"
log_cli_level = "INFO"
python_files = "test_*.py"
python_functions = "test_*"
testpaths = "tests"

[tool.coverage.paths]
source = ["dotify"]

[tool.coverage.run]
branch = true
source = ["dotify"]

[tool.coverage.report]
show_missing = true
fail_under = 80
exclude_lines = ["if self.debug:", "pragma: no cover", "raise NotImplementedError", "if __name__ == .__main__.:"]
ignore_errors = true
omit = ["tests/*"]

[tool.isort]
profile = "black"
src_paths = ["dotify", "tests"]
line_length = 99
known_first_party = "dotify"

[tool.black]
line-length = 99
target-version = ["py37", "py38"]

[tool.mypy]
warn_unused_configs = true
warn_return_any = true
ignore_missing_imports = true
files = ["dotify"]
pretty = true
color_output = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = false

[tool.flakehell]
exclude = [
  ".git",
  ".github",
  ".mypy_cache",
  ".pytest_cache",
  ".tox",
  ".vscode",
  ".venv",
  "build",
  "dist",
  "docs",
  "examples",
  "tests",
  "__pycache__",
  "README.md"
]
format = "colored"
show_source = false
statistics = false
docstring-convention = "google"

accept_encodings = "utf-8"
max_line_length = 99

extended_default_ignore = []

[tool.flakehell.plugins]
"flake8-*" = [
  "+*",
  "-E203",
  "-N801",
  "-Q000",
  "-N805",
  "-D105",
  "-D106",
  "-RST*"
]
mccabe = ["+*"]
nitpick = ["+*"]
"pep8-naming" = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*"]
"wemake-python-styleguide" = [
  "+*",
  "-WPS436",
  "-WPS221",
  "-WPS226",
  "-WPS231",
  "-WPS609",
  "-WPS603",
  "-WPS437",
  "-WPS433",
  "-WPS412",
  "-WPS410",
  "-WPS323",
  "-WPS431",
  "-WPS529",
  "-WPS110",
]
